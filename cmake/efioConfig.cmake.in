if (CMAKE_VERSION VERSION_LESS 2.8.9)
    message(FATAL_ERROR "efio requires at least CMake version 2.8.9")
endif()

if (NOT efio_FIND_COMPONENTS)
    set(efio_NOT_FOUND_MESSAGE "The efio package requires at least one component")
    set(efio_FOUND False)
    return()
endif()

set(_efio_FIND_PARTS_REQUIRED)
if (efio_FIND_REQUIRED)
    set(_efio_FIND_PARTS_REQUIRED REQUIRED)
endif()
set(_efio_FIND_PARTS_QUIET)
if (efio_FIND_QUIETLY)
    set(_efio_FIND_PARTS_QUIET QUIET)
endif()

get_filename_component(_efio_install_prefix "${CMAKE_CURRENT_LIST_DIR}" ABSOLUTE)

set(_efio_NOTFOUND_MESSAGE)

# Let components find each other, but don't overwrite CMAKE_PREFIX_PATH
set(_efio_CMAKE_PREFIX_PATH_old ${CMAKE_PREFIX_PATH})
set(CMAKE_PREFIX_PATH ${_efio_install_prefix})

foreach(module ${efio_FIND_COMPONENTS})
    find_package(${module}
        ${_efio_FIND_PARTS_QUIET}
        ${_efio_FIND_PARTS_REQUIRED}
        PATHS "${_efio_install_prefix}" NO_DEFAULT_PATH
    )
    if (NOT ${module}_FOUND)
        if (efio_FIND_REQUIRED_${module})
            set(_efio_NOTFOUND_MESSAGE "${_efio_NOTFOUND_MESSAGE}Failed to find efio component \"${module}\" config file at \"${_efio_install_prefix}/${module}/${module}Config.cmake\"\n")
        elseif(NOT efio_FIND_QUIETLY)
            message(WARNING "Failed to find efio component \"${module}\" config file at \"${_efio_install_prefix}/${module}/${module}Config.cmake\"")
        endif()
    endif()

    # For backward compatibility set the LIBRARIES variable
    list(APPEND efio_LIBRARIES "efio::${module}")
endforeach()

# Restore the original CMAKE_PREFIX_PATH value
set(CMAKE_PREFIX_PATH ${_efio_CMAKE_PREFIX_PATH_old})

if (_efio_NOTFOUND_MESSAGE)
    set(efio_NOT_FOUND_MESSAGE "${_efio_NOTFOUND_MESSAGE}")
    set(efio_FOUND False)
endif()

